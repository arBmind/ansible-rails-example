#
# Create and Configure multiple users
#
---
- name: Create main group
  group:
    name: "{{ user.group if 'group' in user else user.name }}"

- name: Create extra groups
  group:
    name: "{{ item }}"
  with_items: user['groups'] if 'groups' in user else []

- name: Create
  user:
    name: "{{ user.name }}"
    comment: "{{ user.comment if 'comment' in user else 'Managed by Ansible' }}"
    password: "{{ user.password if 'password' in user else '' }}"
    shell: "{{ user.shell if 'shell' in user else '/bin/sh' }}"
    groups: "{{ user.groups if 'groups' in user else [] | join(',') }}"
    group: "{{ user.group if 'group' in user else user.name }}"

- name: SSH Authorized Key
  authorized_key:
    user: "{{ user.name }}"
    key: "{{ user['authorized_key'] | default(lookup('env','AUTHORIZED_KEY'), true) }}"
  when: (not 'password' in user) or ('authorized_key' in user) or (lookup('env','AUTHORIZED_KEY') != '')

- name: Environment Variables
  lineinfile:
    dest: ~/.profile
    regexp: "^export {{ item.key }}="
    line: "export {{ item.key }}={{ lookup('env', item.key) | default(item.value, true) }}"
  sudo: true
  sudo_user: "{{ user.name }}"
  when: (lookup('env', item.key) != '') or (item.value != '')
  with_dict: user.env if 'env' in user else {}

- name: Environment from Facts
  lineinfile:
    dest: ~/.profile
    regexp: "^export {{ item.1 }}="
    line: "export {{ item.1 }}={{ hostvars[groups[item.0.group][item.0.index if 'index' in item.0 else 0]][item.1] }}"
  sudo: true
  sudo_user: "{{ user.name }}"
  when: (not item.1 in user.env) and (item.0.group in groups) and (item.1 in hostvars[groups[item.0.group][item.0.index if 'index' in item.0 else 0]])
  with_subelements:
  - user.env_facts if 'env_facts' in user else {}
  - facts

- name: Bashrc lines
  lineinfile:
    dest: ~/.bashrc
    line: "{{ item }}"
    regexp: "^{{ item }}$"
    create: true
  sudo: true
  sudo_user: "{{ user.name }}"
  with_items: user.bashrc_lines if 'bashrc_lines' in user else []
