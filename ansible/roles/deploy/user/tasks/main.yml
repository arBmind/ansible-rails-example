- name: Create group
  group:
    name: "{{ item }}"
  with_flattened:
  - user_groups
  - "{{ user_group | default(user_name, true) | default(app_user, true) }}"

- name: Create
  user:
    name: "{{ user_name | default(app_user, true) }}"
    comment: "{{ user_comment }}"
    password: "{{ user_password | default('', true) }}"
    shell: "{{ user_shell | default('/bin/sh', true) }}"
    groups: "{{ user_groups | join(',') }}"
    group: "{{ user_group | default((user_groups | default([user_name], true) | first), true) | default(app_user, true) }}"

- name: SSH Authorized Key
  authorized_key:
    user: "{{ user_name | default(app_user, true) }}"
    key: "{{ lookup('env','AUTHORIZED_KEY') | default(user_authorized_key, true) }}"
  when: (not user_password) or (lookup('env','AUTHORIZED_KEY') != '') or user_authorized_key

- name: Add Environment
  lineinfile:
    dest: ~/.profile
    regexp: "^export {{ item.key }}="
    line: "export {{ item.key }}={{ lookup('env', item.key) | default(item.value, true) }}"
  sudo: true
  sudo_user: "{{ user_name | default(app_user, true) }}"
  when: lookup('env', item.key) or item.value
  with_dict: user_env

- name: Export DATABASE_URL
  lineinfile:
    dest: ~/.profile
    regexp: "^export DATABASE_URL="
    line: "export DATABASE_URL={{ hostvars[groups['db'][0]].DATABASE_URL }}"
  sudo: true
  sudo_user: "{{ user_name | default(app_user, true) }}"
  when: (not 'DATABASE_URL' in user_env) and groups['db'])

- name: Export RAILS_LOG_FILE_PATH
  lineinfile:
    dest: ~/.profile
    regexp: "^export RAILS_LOG_FILE_PATH="
    line: "export RAILS_LOG_FILE_PATH={{ hostvars[groups['app'][0]].RAILS_LOG_FILE_PATH }}"
  sudo: true
  sudo_user: "{{ user_name | default(app_user, true) }}"
  when: (not 'RAILS_LOG_FILE_PATH' in user_env) and groups['app'] and ('RAILS_LOG_FILE_PATH' in hostvars[groups['app'][0]])

- name: Add default login directory for user
  lineinfile:
    dest: /home/deploy/.bashrc
    line: "cd {{ app_path }}"
    regexp: "^cd {{ app_path }}"
    owner: deploy
    state: present
    insertafter: EOF
    create: true
